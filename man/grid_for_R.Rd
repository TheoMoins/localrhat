% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/univariate_rhat.R
\name{grid_for_R}
\alias{grid_for_R}
\title{Quantile values used for the computation of \eqn{\hat{R}_\infty}}
\usage{
grid_for_R(chains, max_nb_points = 500)
}
\arguments{
\item{chains}{an array of size \eqn{n \times m} where \eqn{n} is the length of
the chains and \eqn{m \geq 2} is the number of chains.}

\item{max_nb_points}{the maximal length of the grid in the case where the total
number of samples is larger. By default, \code{max_nb_points = 500}.}
}
\value{
A list that contains the different \eqn{x} used for the computation of
\eqn{\hat{R}(x)}.
}
\description{
Return the set of points that will be used to estimate the supremum of
\eqn{\hat{R}(x)} over \eqn{x}. The number of different values taken by
\eqn{\hat{R}(x)} can not exceed the number of samples, so the number of points
used for the computation is the minimum between \eqn{n \times m} and a threshold
value that can be specified in the argument \code{max_nb_points}
}
\details{
As the computation of local-\eqn{\hat{R}} are based on indicator
values \eqn{I(\theta^{(i,j)} \leq x)} and because the chains are finite, it is
enough to evaluate these indicators in \eqn{x = \theta^{(i',j')}} to obtain all
the possible values of \eqn{\hat{R}(x)}. However, to keep the computation time
reasonable, if \eqn{n \times m} is greater than a given \code{max_nb_points},
the values are sorted and uniform thinning is apply (which means picking off every k
iterations) so that only \code{max_nb_points} is kept at the end.
}
\examples{
library(localrhat)

N <- 500 # length of chains
M <- 4 # number of chains

# Toy example with 3 i.i.d chains uniform in [-0.5, 0.5] and 1 in [-1, 1]:
chains <- array(c(runif((M-1)*N, -1/2, 1/2), runif(N, -1,1)), c(N,M))

# plot_local_r(grid_for_R(chains), all_local_rhat(chains),
#             xlim = c(-1, 1), ylim=c(0.999,1.1), title ="Gaussian distributions")

}
\references{
TO INCLUDE
}
